{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-19T01:56:34.261Z",
    "end": "2024-09-19T01:56:38.356Z",
    "duration": 4095,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0ab6323a-98a1-4555-8ba0-04f6650648b1",
      "title": "",
      "fullFile": "cypress/e2e/uploadImageToPet.spec.js",
      "file": "cypress/e2e/uploadImageToPet.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e3626847-4130-426e-87af-64f4dabcc876",
          "title": "upload image to pet",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Uploads an image to the pet successfully and logs the status code",
              "fullTitle": "upload image to pet Uploads an image to the pet successfully and logs the status code",
              "timedOut": null,
              "duration": 3022,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Define the pet ID\nconst petId = 1;\n// Use the fixture method to read the image file from the cypress fixtures folder as base64\ncy.fixture('pet2.jpg', 'base64').then(fileContent => {\n  // Manually construct the multipart form-data body\n  const boundary = '----WebKitFormBoundary7MA4YWxkTrZu0gW';\n  const body = `--${boundary}\\r\\n` + `Content-Disposition: form-data; name=\"file\"; filename=\"pet2.jpg\"\\r\\n` + `Content-Type: image/jpeg\\r\\n\\r\\n` + `${fileContent}\\r\\n` + `--${boundary}--\\r\\n`;\n  // Send the POST request to upload the image\n  cy.request({\n    method: 'POST',\n    url: `/pet/${petId}/uploadImage`,\n    // Upload image to the pet\n    headers: {\n      'Content-Type': `multipart/form-data; boundary=${boundary}`\n    },\n    body: body,\n    failOnStatusCode: false // Continue the test even if the status code isn't 2xx\n  }).then(response => {\n    // Log the entire response\n    cy.log('Full response:', JSON.stringify(response));\n    // Check if the response body and message exist\n    if (response.body && response.body.message) {\n      const responseMessage = response.body.message;\n      cy.log(`Response Message: ${responseMessage}`);\n      expect(responseMessage).to.include('File uploaded to ./pet2.jpg');\n      expect(response.status).to.equal(200); // Assert that the status code is 200\n    } else {\n      cy.log('Response body or message is undefined');\n      throw new Error('Response body or message is missing');\n    }\n  });\n});",
              "err": {},
              "uuid": "cea761d0-cb90-4e3d-b741-8a95764629cc",
              "parentUUID": "e3626847-4130-426e-87af-64f4dabcc876",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cea761d0-cb90-4e3d-b741-8a95764629cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3022,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}